object main extends App {
  val screen =
    """|0:100,125, 56,200
       |1:255,  0,  0
       |2:  0,135,200
       |3:220, 12,  0,100
       |4: 45, 97,  0
       |5:  0,  0,  0
       |6:  0,  0,  0,0
       |7:  0,  0,  0
       |8:255,255,255
       |""".stripMargin
  case class Pozicia(x:Int, y:Int)
  case class Vlastnosti(cerv:Int, zele:Int, modr:Int, priehl: Option[Int])
  case class Pixel(poz:Pozicia, Vlast:Vlastnosti)
  val pixi: List[Pixel] =
    for (line <- screen.replace(" ","").split("\n").toList) yield {
      line.trim match{
        case s"$id:$cerv,$zele,$modr,$priehl" =>          Pixel(Pozicia(id.toInt % 3 , id.toInt / 3), Vlastnosti(cerv.toInt, zele.toInt, modr.toInt, priehl.toIntOption))
        case s"$id:$cerv,$zele,$modr" =>          Pixel(Pozicia(id.toInt % 3, id.toInt / 3), Vlastnosti(cerv.toInt, zele.toInt, modr.toInt, None))
      }
    }
  println(pixi)
  val cervena : Map[Int , Pixel] =  pixi.groupBy(_.poz.x).map{
    case (x,pixels) => (x,pixels.maxBy(_.Vlast.cerv))
  }
  val priehlad : Map[Int,Int] = pixi.groupBy(_.poz.x).map{
    case (x,pixels) => (x,(pixels.maxBy(_.Vlast.priehl.getOrElse(0))).poz.y)
  }
  println("cervene = " + cervena)
  println("priehladne = " + priehlad)
}